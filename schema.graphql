directive @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE

enum CacheControlScope {
  PUBLIC
  PRIVATE
}

type Cashback {
  _id: String
  accountId: String
  bank: String
  amount: Int
  accountNumber: String
  accountHolder: String
  status: String
}

input CashbackCrtDto {
  accountId: String
  bank: String
  amount: Int
  accountNumber: String
  accountHolder: String
}

type FBUser {
  userType: String
}

type Firm {
  _id: String
  account_id: String
  fname: String
  thumbnail: String
  phoneNumber: String
  equiListStr: String
  modelYear: Int
  address: String
  addressDetail: String
  sidoAddr: String
  sigunguAddr: String
  addrLongitude: Float
  addrLatitude: Float
  workAlarmSido: String
  workAlarmSigungu: String
  introduction: String
  photo1: String
  photo2: String
  photo3: String
  blog: String
  homepage: String
  sns: String
}

input FirmChatMessageInput {
  _id: ID
  text: String!
  createdAt: Float
  user: UserInput!
}

type FirmChatMessageResponse {
  _id: ID
  text: String!
  createdAt: Float
  user: UserRsponse!
}

type FirmHarmCase {
  accountId: String
  reason: String
  telNumber: String
  cliName: String
  firmName: String
  telNumber2: String
  telNumber3: String
  firmNumber: String
  equipment: String
  local: String
  amount: Int
  regiTelNumber: String
  likeCount: String
  unlikeCount: String
  updateDate: String
  timestamp: Int
}

type FirmHarmCaseConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [FirmHarmCaseEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

input FirmHarmCaseCrtDto {
  accountId: String
  reason: String
  telNumber: String
  cliName: String
  firmName: String
  telNumber2: String
  telNumber3: String
  firmNumber: String
  equipment: String
  local: String
  amount: Int
  regiTelNumber: String
  likeCount: String
  unlikeCount: String
}

type FirmHarmCaseEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: FirmHarmCase!
}

input FirmInput {
  account_id: String
  fname: String
  thumbnail: String
  phoneNumber: String
  equiListStr: String
  modelYear: Int
  address: String
  addressDetail: String
  sidoAddr: String
  sigunguAddr: String
  addrLongitude: Float
  addrLatitude: Float
  workAlarmSido: String
  workAlarmSigungu: String
  introduction: String
  photo1: String
  photo2: String
  photo3: String
  blog: String
  homepage: String
  sns: String
}

input FirmUpdateInput {
  fname: String
  thumbnail: String
  phoneNumber: String
  equiListStr: String
  modelYear: Int
  address: String
  addressDetail: String
  sidoAddr: String
  sigunguAddr: String
  addrLongitude: Float
  addrLatitude: Float
  workAlarmSido: String
  workAlarmSigungu: String
  introduction: String
  photo1: String
  photo2: String
  photo3: String
  blog: String
  homepage: String
  sns: String
}

type Mutation {
  addFirmChatMessage(message: FirmChatMessageInput): FirmChatMessageResponse
  createFirm(newFirm: FirmInput): Firm
  updateFirm(account_id: String, updateFirm: FirmUpdateInput): Firm
  deleteFirm(account_id: String): Int
  createCashback(crtDto: CashbackCrtDto): Cashback
  createFirmHarmCase(crtDto: FirmHarmCaseCrtDto): FirmHarmCase
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String

  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String
}

input PageQueryInfo {
  """Returns the first n elements from the list."""
  first: Int

  """Returns the elements in the list that come after the specified cursor"""
  after: String

  """Returns the last n elements from the list."""
  last: Int

  """Returns the elements in the list that come before the specified cursor"""
  before: String
}

type Query {
  hello: String
  sendAllNotification: Boolean
  firmChatMessage: [FirmChatMessageResponse]
  firm(account_id: String!): [Firm]
  firms: [Firm]
  fbUser(accountId: String!): FBUser
  cashbacks(accountId: String!): [Cashback]
  firmHarmCases(pageQueryInfo: PageQueryInfo): FirmHarmCaseConnection!
}

type Subscription {
  firmNewChat: FirmChatMessageResponse
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UserInput {
  _id: ID!
  name: String
  avatar: String
}

type UserRsponse {
  _id: ID!
  name: String
  avatar: String
}

